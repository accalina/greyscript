// ----------------
// http-testvuln 1.0
// Exploit vuln on: testing the vulnerability found using scanlib, 
// Author: Accalina
// ----------------


// --- no need to change this code block ---
// Check for User Params and initiate variable
if params.len != 2 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address] [port]</b>")
address = params[0]
port = params[1].to_int
shell = get_shell

// --- init the metaxploit lib and connect to service via net use lib 
exploit_init = function(address, port=80)
    // check for loaded metasploit script
    metaxploit = include_lib("/lib/metaxploit.so")
    if not metaxploit then
        metaxploit = include_lib(current_path + "/metaxploit.so")
    end if
    if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder")

    // establish connection
    net_session = metaxploit.net_use( address, port )
    if not net_session then exit("Error: can't connect to net session")
    return net_session.dump_lib
end function

change_pass = function(metaLib)
    result = metaLib.overflow("0x20F574A5", "_lending_d", "alina")
    print("changing user password to: 'alina'")
    if not result then exit("Program ended")
    return result
end function

inject_http = function(metaLib)
    result = metaLib.overflow("0xAC867BA", "iewportbackgroupintrings")
    if not result then exit("Program ended")
    return result
end function

decrypt_root_pass = function()
    crypto = include_lib("/lib/crypto.so")
    passwdContent = shell.host_computer.File("/home/accalina/alina/passwd").get_content
    firstAccount = passwdContent.split(char(10))[0]
    parsed = firstAccount.split(":")
    username = parsed[0]
    passwordHash = parsed[1]
    password = crypto.decipher(passwordHash)
    print("User: " + username)
    print("Password: " + password)
    return password
end function

dump_passwd = function(connectionResult)
    result = connectionResult.scp("/etc/passwd", "/home/accalina/alina/", shell)
    if typeof(result) == "string" then exit("There was an error while sending file: " + result)

    // crack root password found on user password list
    root_password = decrypt_root_pass() 
    return root_password
end function
// -----------------------------------------

// test the vuln
metaLib = exploit_init(address, port)
change_pass(metaLib) // change user password to alina
user_conn = inject_http(metaLib) // inject http shell as user
dump_passwd(user_conn) // dump passwd file to local
user_conn.start_terminal // start terminal session as user